% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transformations.R
\name{contr.cumulative}
\alias{contr.cumulative}
\title{Cumulative (Threshold) Contrast Coding for Ordered Factors}
\usage{
contr.cumulative(n)
}
\arguments{
\item{n}{Integer or character vector. If an integer, specifies the number
of levels. If a character vector, its elements are used as factor levels.}
}
\value{
A numeric matrix with \code{length(n)} rows and \code{length(n)-1} columns.
Each column is a dummy variable encoding the cumulative comparison of
higher levels against lower levels. Row names correspond to factor levels.
}
\description{
Generates a contrast matrix for ordered factors in which each column
represents a cumulative comparison: level k versus all lower levels.
This is sometimes called cumulative or sequential dummy coding.
}
\details{
For an ordered factor with levels A < B < C < D, the resulting matrix
produces three columns:
Column 1 compares B, C, D versus A;
Column 2 compares C, D versus A and B;
Column 3 compares D versus A, B, and C.
Each element of the matrix is 0 or 1, with 1 indicating that the observation
belongs to the "higher" category for that threshold.

\strong{Column Names:} Column names are formatted as \code{varname_1}, \code{varname_2}, etc.
These names are syntactically valid, unique, and correspond to thresholds in order:
\code{varname_1} represents the first threshold (level 2 vs level 1),
\code{varname_2} represents the second threshold (level 3 vs levels 1 and 2), etc.

This contrast matrix can be assigned to an ordered factor via
\code{contrasts()} before fitting a model, e.g., in \code{mfp2.formula()}.
This approach preserves ordinal information while allowing threshold-type
interpretation of regression coefficients.
}
\examples{
# Create a data frame
data <- data.frame(grade = c("A", "B", "C", "D", "A"))
# Convert the column to an ordered factor
data$grade <- factor(data$grade, levels = c("A", "B", "C", "D"), ordered = TRUE)
# Assign the cumulative contrasts to the ordered factor
contrasts(data$grade) <- contr.cumulative(levels(data$grade))

}
