% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fracplot.R
\name{fracplot}
\alias{fracplot}
\alias{plot_mfp}
\title{Plot response functions from a fitted \code{mfp2} object}
\usage{
fracplot(
  model,
  terms = NULL,
  partial_only = FALSE,
  type = c("terms", "contrasts"),
  ref = NULL,
  terms_seq = c("data", "equidistant"),
  alpha = 0.05,
  color_points = "#AAAAAA",
  color_line = "red",
  color_line_spike = "red",
  color_fill = "#000000",
  shape = 1,
  size_points = 1,
  size_points_spike = 2,
  linetype = "solid",
  linewidth = 1,
  alpha_fill = 0.1
)

plot_mfp(...)
}
\arguments{
\item{model}{A fitted \code{\link{mfp2}} model.}

\item{terms}{Character vector with variable names to be plotted.  If \code{NULL},
all fractional polynomial terms in the model are plotted.}

\item{partial_only}{Logical. If \code{TRUE}, only the partial predictor (model
component) is plotted. If \code{FALSE} (default), component-plus-residual plots
are drawn. Only used if \code{type = "terms"}. See below for details.}

\item{type}{Character, one of \code{"terms"} or \code{"contrasts"}. Passed to
\code{\link[=predict.mfp2]{predict.mfp2()}}. \code{"terms"} plots partial predictors (with or without
residuals), while \code{"contrasts"} plots contrasts relative to a reference
value.}

\item{ref}{Reference list passed to \code{\link[=predict.mfp2]{predict.mfp2()}} when \code{type = "contrasts"}. Ignored otherwise.}

\item{terms_seq}{Character, one of \code{"data"} or \code{"equidistant"}. Passed to
\code{\link[=predict.mfp2]{predict.mfp2()}}. \code{"data"} uses the observed values, \code{"equidistant"} creates
a grid over the covariate range.}

\item{alpha}{Confidence level for intervals. Passed to \code{\link[=predict.mfp2]{predict.mfp2()}}.}

\item{color_points}{Character value. Color of points used when residuals
are displayed.}

\item{color_line}{Character value. Color of the line representing
the partial predictor.}

\item{color_fill}{Character value. Fill color of the confidence interval ribbon.}

\item{shape}{Numeric value. Shape of points used when residuals
are displayed.}

\item{size_points}{Numeric value. Size of points used when residuals
are displayed.}

\item{linetype}{Character value. Line type for the partial predictor.
See \code{\link[ggplot2:geom_path]{ggplot2::geom_line()}} for options.}

\item{linewidth}{Numeric value. Width of the line representing
the partial predictor.}

\item{alpha_fill}{Numeric value between 0 and 1. Transparency of the
confidence interval ribbon.}

\item{...}{Further arguments passed from the alias \code{plot_mfp()}.}
}
\value{
A list of \code{ggplot2} plot objects, one for each term requested. Can be
drawn as individual plots or facetted / combined easily using e.g.
\code{patchwork::wrap_plots} and further customized.
}
\description{
Produces partial predictor plots (or contrasts) with confidence intervals
against selected covariates from a fitted \code{\link{mfp2}} model. If requested,
component-plus-residual plots are also supported.
}
\details{
Confidence intervals are based on the variance–covariance matrix of the
final fitted model. They reflect uncertainty in the regression coefficients
but not in the selection of fractional polynomial powers. Intervals may
therefore be too narrow. A bootstrap approach (not yet implemented) is
recommended for more realistic intervals (see Royston & Sauerbrei, 2008,
Section 4.9.2).

Component-plus-residual plots are available if \code{type = "terms"}. Deviance
residuals are used for generalized linear models, while martingale residuals
are used for Cox regression. This matches the behavior of the Stata \code{mfp}
program.

Spike-at-zero covariates are handled according to the \code{spike_decision} code:
\itemize{
\item \code{1} – Include both the transformed FP function for positive values and the binary
spike-at-zero indicator.
\item \code{2} – Ignore the spike; treat the variable as continuous (usual FP plot).
\item \code{3} – Show only the binary spike-at-zero indicator.
}

Plot behavior for each decision:
\itemize{
\item If \code{spike_decision == 1}, the plot shows the FP function for positive values
and includes the binary spike-at-zero indicator. The mean value for observations
at zero is also displayed with a vertical error bar. The plot title includes
\code{+ z} to indicate the presence of the spike-at-zero component. The FP power
for the positive part is enclosed in parentheses. For example, \code{FP(0) + z}
indicates an FP power of 0 (log) for the positive values.
\item If \code{spike_decision == 3}, the plot shows the binary indicator alone (\verb{z only} in
the title). Mean values at 0 and 1 are connected with a line, and a ribbon showing
confidence intervals is displayed.
\item If \code{spike_decision == 2} (or not specified), the covariate is plotted as a
continuous FP function in the usual way.
}
}
\section{Functions}{
\itemize{
\item \code{plot_mfp()}: Alias for fracplot.

}}
\examples{

# Gaussian response
data("prostate")
x = as.matrix(prostate[,2:8])
y = as.numeric(prostate$lpsa)
# default interface
fit = mfp2(x, y, verbose = FALSE)
fracplot(fit) # generate plots

}
\seealso{
\code{\link[=predict.mfp2]{predict.mfp2()}}
}
